sampler g_AlbedoSampler : register(s0);
float4 g_CameraParam : register(c193);
sampler g_NormalSampler : register(s1);
sampler g_NormalSampler2 : register(s8);
sampler g_SignSampler : register(s7);
sampler g_SpecMaskSampler : register(s2);
float4 g_TargetUvParam : register(c194);
sampler g_Z_ShadowSampler : register(s5);
sampler g_Z_ShadowSampler2 : register(s6);
float4 g_finalColor_enhance : register(c188);
float4 g_hoseiBG1 : register(c46);
float4 g_hoseiBG2 : register(c47);
float4 g_hoseiEM1 : register(c42);
float4 g_hoseiEM2 : register(c43);
float4 g_hoseiOBJ1 : register(c44);
float4 g_hoseiOBJ2 : register(c45);
float4 g_hoseiPL1 : register(c40);
float4 g_hoseiPL2 : register(c41);
float4 g_hoseiSKN1 : register(c48);
float4 g_hoseiSKN2 : register(c49);
float4 g_lightCol : register(c186);
float4 g_lightCol2 : register(c175);
float4 g_lightCol3 : register(c177);
float4 g_lightCol4 : register(c179);
float4 g_lightCol5 : register(c181);
float4 g_lightCol6 : register(c183);
float4 g_lightCol7 : register(c191);
float4 g_lightDir : register(c185);
float4 g_lightDir2 : register(c176);
float4 g_lightDir3 : register(c178);
float4 g_lightDir4 : register(c180);
float4 g_lightDir5 : register(c182);
float4 g_lightDir6 : register(c184);
float4 g_lightDir7 : register(c192);
sampler g_specPow : register(s4);
float4 prefogcolor_enhance : register(c187);

struct PS_IN
{
	float2 texcoord : TEXCOORD;
	float3 texcoord1 : TEXCOORD1;
};

float4 main(PS_IN i) : COLOR
{
	float4 o;

	float4 r0;
	float4 r1;
	float4 r2;
	float4 r3;
	float4 r4;
	float4 r5;
	float4 r6;
	float4 r7;
	r0.xy = g_TargetUvParam.xy + i.texcoord.xy;
	r1 = tex2D(g_SignSampler, r0);
	r2 = r1 + 0.5;
	r3 = frac(r2);
	r2 = r2 + -r3;
	r3 = r2.wwyy * float4(6, 6, 4, 4);
	r4 = -r1 + 1.5;
	r5 = frac(r4);
	r4 = r4 + -r5;
	r3 = r4.wwyy * 3 + r3;
	r2 = r2.zzxx * 2 + r4.zzxx;
	r4 = frac(-r1);
	r1 = r1 + r4;
	r3 = r1.wwyy * r3;
	r1 = r2 * r1.zzxx + r3;
	r2 = r1.yyyw + float4(-1, -2, -3, -1);
	r3 = r2.w;
	clip(r3);
	r4 = r1 + float4(-4, -5, -2, -3);
	r0.z = lerp(g_hoseiPL1.y, g_hoseiPL1.x, r1.y);
	r2.xyz = r2.xyz;
	r0.z = (-r2.x >= 0) ? r0.z : g_hoseiPL1.z;
	r0.z = (-r2.y >= 0) ? r0.z : g_hoseiPL1.w;
	r0.z = (-r2.z >= 0) ? r0.z : g_hoseiPL2.x;
	r0.z = (-r4.x >= 0) ? r0.z : g_hoseiPL2.y;
	r0.w = lerp(g_hoseiEM1.y, g_hoseiEM1.x, r1.y);
	r0.w = (-r2.x >= 0) ? r0.w : g_hoseiEM1.z;
	r0.w = (-r2.y >= 0) ? r0.w : g_hoseiEM1.w;
	r0.w = (-r2.z >= 0) ? r0.w : g_hoseiEM2.x;
	r0.w = (-r4.x >= 0) ? r0.w : g_hoseiEM2.y;
	r1.x = lerp(r0.w, r0.z, r3.x);
	r0.z = lerp(g_hoseiOBJ1.y, g_hoseiOBJ1.x, r1.y);
	r0.z = (-r2.x >= 0) ? r0.z : g_hoseiOBJ1.z;
	r0.z = (-r2.y >= 0) ? r0.z : g_hoseiOBJ1.w;
	r0.z = (-r2.z >= 0) ? r0.z : g_hoseiOBJ2.x;
	r0.z = (-r4.x >= 0) ? r0.z : g_hoseiOBJ2.y;
	r0.z = (-r4.z >= 0) ? r1.x : r0.z;
	r0.w = lerp(g_hoseiBG1.y, g_hoseiBG1.x, r1.y);
	r0.w = (-r2.x >= 0) ? r0.w : g_hoseiBG1.z;
	r0.w = (-r2.y >= 0) ? r0.w : g_hoseiBG1.w;
	r0.w = (-r2.z >= 0) ? r0.w : g_hoseiBG2.x;
	r0.w = (-r4.x >= 0) ? r0.w : g_hoseiBG2.y;
	r0.z = (-r4.w >= 0) ? r0.z : r0.w;
	r0.w = r1.w + -4;
	r2.w = lerp(g_hoseiSKN1.y, g_hoseiSKN1.x, r1.y);
	r1.x = (-r2.x >= 0) ? r2.w : g_hoseiSKN1.z;
	r1.x = (-r2.y >= 0) ? r1.x : g_hoseiSKN1.w;
	r1.x = (-r2.z >= 0) ? r1.x : g_hoseiSKN2.x;
	r1.x = (-r4.x >= 0) ? r1.x : g_hoseiSKN2.y;
	r0.z = (-r0.w >= 0) ? r0.z : r1.x;
	r3.xyz = g_lightCol.xyz;
	r1.xzw = -r3.xyz + g_lightCol2.xyz;
	r1.xzw = r1.yyy * r1.xzw + g_lightCol.xyz;
	r1.xzw = (-r2.xxx >= 0) ? r1.xzw : g_lightCol3.xyz;
	r1.xzw = (-r2.yyy >= 0) ? r1.xzw : g_lightCol4.xyz;
	r1.xzw = (-r2.zzz >= 0) ? r1.xzw : g_lightCol5.xyz;
	r1.xzw = (-r4.xxx >= 0) ? r1.xzw : g_lightCol6.xyz;
	r1.xzw = (-r4.yyy >= 0) ? r1.xzw : g_lightCol7.xyz;
	r1.xzw = r0.zzz * r1.xzw;
	r3 = tex2D(g_AlbedoSampler, r0);
	r5.xyz = r1.xzw * r3.xyz;
	r6.xyz = g_lightDir.xyz;
	r6.xyz = -r6.xyz + g_lightDir2.xyz;
	r6.xyz = r1.yyy * r6.xyz + g_lightDir.xyz;
	r6.xyz = (-r2.xxx >= 0) ? r6.xyz : g_lightDir3.xyz;
	r2.xyw = (-r2.yyy >= 0) ? r6.xyz : g_lightDir4.xyz;
	r2.xyz = (-r2.zzz >= 0) ? r2.xyw : g_lightDir5.xyz;
	r2.xyz = (-r4.xxx >= 0) ? r2.xyz : g_lightDir6.xyz;
	r2.xyz = (-r4.yyy >= 0) ? r2.xyz : g_lightDir7.xyz;
	r4 = tex2D(g_NormalSampler2, r0);
	r0.z = r4.y * 0.003921569 + r4.x;
	r4.y = r4.z * 0.003921569 + r0.z;
	r4.z = r4.w;
	r6 = tex2D(g_NormalSampler, r0);
	r0.z = r6.y * 0.003921569 + r6.x;
	r4.x = r6.z * 0.003921569 + r0.z;
	r4.xyz = r4.xyz * 2 + -1;
	r6.xyz = normalize(r4.xyz);
	r0.z = dot(r2.xyz, r6.xyz);
	r4.xyz = r0.zzz * r5.xyz;
	r5 = tex2D(g_Z_ShadowSampler2, r0);
	r4.xyz = r4.xyz * r5.zzz;
	r0.w = r0.z + -0.5;
	r1.y = max(r0.w, 0);
	r0.w = r1.y + r3.w;
	r4.xyz = r0.www * r4.xyz;
	r5 = tex2D(g_Z_ShadowSampler, r0);
	r7 = tex2D(g_SpecMaskSampler, r0);
	r0.x = r5.x * g_CameraParam.y + g_CameraParam.x;
	r5.xyz = r0.xxx * i.texcoord1.xyz;
	r0.x = dot(-r5.xyz, -r5.xyz);
	r0.x = 1 / sqrt(r0.x);
	r2.xyz = -r5.xyz * r0.xxx + r2.xyz;
	r5.xyz = normalize(r2.xyz);
	r0.x = dot(r5.xyz, r6.xyz);
	r1.y = max(r0.x, 0);
	r0.x = -r1.y + 1;
	r2.xy = r7.zw * float2(5, 100);
	r0.x = r0.x * -r2.y + r1.y;
	r2.z = r6.w + -0.495;
	r2.w = (-r2.z >= 0) ? 0 : 1;
	r2.z = (r2.z >= 0) ? -0 : -1;
	r2.z = r2.z + r2.w;
	r3.w = max(r2.z, 0);
	r2.z = r3.w * -0.5 + r6.w;
	r2.w = r2.z + -0.245;
	r4.w = (-r2.w >= 0) ? 0 : 1;
	r2.w = (r2.w >= 0) ? -0 : -1;
	r2.w = r2.w + r4.w;
	r4.w = max(r2.w, 0);
	r2.z = r4.w * -0.25 + r2.z;
	r3.xyz = r3.xyz + r4.www;
	r0.y = r2.z * 4;
	r5 = tex2D(g_specPow, r0);
	r0.x = (-r0.z >= 0) ? 0 : 1;
	r0.y = r0.z * r0.x;
	r0.x = (-r1.y >= 0) ? 0 : r0.x;
	r0.z = pow(r1.y, r2.y);
	r0.x = r0.z * r0.x;
	r2.yzw = r0.yyy * -r0.xxx + r5.xyz;
	r0.x = r0.x * r0.y;
	r0.xyz = r7.yyy * r2.yzw + r0.xxx;
	r0.xyz = r0.xyz * r2.xxx;
	r0.xyz = r3.xyz * r0.xyz;
	r0.xyz = r4.xyz * r3.www + r0.xyz;
	r0.xyz = r1.xzw * r0.xyz;
	r0.xyz = r0.www * r0.xyz;
	r0.xyz = r3.www * r0.xyz;
	r0.xyz = r0.xyz * prefogcolor_enhance.xyz;
	o.xyz = r0.xyz * g_finalColor_enhance.xyz;
	o.w = 1;

	return o;
}
