sampler Color_2_sampler : register(s1);
float4 CubeParam : register(c42);
sampler Shadow_Tex_sampler : register(s11);
float4 SoftPt_Rate : register(c44);
float4 ambient_rate : register(c40);
float4 blendTile : register(c49);
samplerCUBE cubemap_sampler : register(s2);
float4 finalcolor_enhance : register(c78);
float3 fog : register(c67);
float4 g_CameraParam : register(c193);
float g_ShadowUse : register(c180);
float4 g_TargetUvParam : register(c194);
float4 g_WtrFogColor : register(c46);
float4 g_WtrFogParam : register(c45);
sampler g_Z_sampler : register(s13);
float4 light_Color : register(c61);
float4 lightpos : register(c62);
sampler normalmap_sampler : register(s3);
float4 prefogcolor_enhance : register(c77);
float4 specularParam : register(c41);
float4 tile : register(c48);
float4x4 viewInverseMatrix : register(c12);

struct PS_IN
{
	float4 color : COLOR;
	float4 texcoord : TEXCOORD;
	float4 texcoord1 : TEXCOORD1;
	float4 texcoord2 : TEXCOORD2;
	float3 texcoord3 : TEXCOORD3;
	float3 texcoord4 : TEXCOORD4;
	float4 texcoord7 : TEXCOORD7;
	float4 texcoord8 : TEXCOORD8;
};

float4 main(PS_IN i) : COLOR
{
	float4 o;

	float4 r0;
	float4 r1;
	float4 r2;
	float4 r3;
	float4 r4;
	float3 r5;
	float3 r6;
	r0.xyz = finalcolor_enhance.xyz;
	r0.w = -1 + i.color.w;
	r1.zw = float2(0.5, -0.5);
	r0 = SoftPt_Rate.y * r0 + -r1.wwwz;
	r0.w = r0.w * ambient_rate.w;
	r0 = r0 + -g_WtrFogColor;
	r1.xy = i.texcoord8.xy * float2(0.5, -0.5) + 0.5;
	r1.xy = r1.xy + g_TargetUvParam.xy;
	r2 = tex2D(g_Z_sampler, r1);
	r1.x = r2.x * g_CameraParam.y + g_CameraParam.x;
	r1.x = r1.x + -i.texcoord8.w;
	r1.x = -r1.x + g_WtrFogParam.w;
	r2.xy = -g_WtrFogParam.zx + g_WtrFogParam.wy;
	r1.y = 1 / r2.x;
	r2.x = 1 / r2.y;
	r1.x = r1.y * r1.x;
	r0 = r0 * r1.x;
	r1.x = g_WtrFogParam.y + i.texcoord1.z;
	r1.x = r2.x * r1.x;
	r0 = r1.x * r0 + g_WtrFogColor;
	r2 = r0.w + -0.01;
	clip(r2);
	r2.xyz = i.texcoord3.xyz;
	r3.xyz = r2.yzx * i.texcoord2.zxy;
	r2.xyz = i.texcoord2.yzx * r2.zxy + -r3.xyz;
	r1.xy = i.texcoord.zw * blendTile.xy + blendTile.zw;
	r3 = tex2D(Color_2_sampler, r1);
	r1.xy = i.texcoord.zw * tile.xy + tile.zw;
	r4 = tex2D(normalmap_sampler, r1);
	r4.xyz = r4.xyz + -0.5;
	r1.xy = r3.xy + r4.xy;
	r1.xy = r1.xy + -0.5;
	r2.xyz = r2.xyz * -r1.yyy;
	r1.x = r1.x * i.texcoord2.w;
	r2.xyz = r1.xxx * i.texcoord2.xyz + r2.xyz;
	r2.xyz = r4.zzz * i.texcoord3.xyz + r2.xyz;
	r1.x = dot(r2.xyz, r2.xyz);
	r1.x = 1 / sqrt(r1.x);
	r2.xyz = r2.xyz * r1.xxx + -i.texcoord3.xyz;
	r2.xyz = CubeParam.www * r2.xyz + i.texcoord3.xyz;
	r3.x = dot(r2.xyz, transpose(viewInverseMatrix)[0].xyz);
	r3.y = dot(r2.xyz, transpose(viewInverseMatrix)[1].xyz);
	r3.z = dot(r2.xyz, transpose(viewInverseMatrix)[2].xyz);
	r1.x = dot(i.texcoord4.xyz, r3.xyz);
	r1.x = r1.x + r1.x;
	r3.xyz = r3.xyz * -r1.xxx + i.texcoord4.xyz;
	r3.w = -r3.z;
	r3 = tex2D(cubemap_sampler, r3.xyww);
	r1.x = dot(-i.texcoord1.xyz, -i.texcoord1.xyz);
	r1.x = 1 / sqrt(r1.x);
	r4.xyz = r1.xxx * -i.texcoord1.xyz;
	r5.xyz = -i.texcoord1.xyz * r1.xxx + lightpos.xyz;
	r6.xyz = normalize(r5.xyz);
	r1.x = dot(r6.xyz, r2.xyz);
	r1.y = dot(r4.xyz, r2.xyz);
	r2.x = dot(lightpos.xyz, r2.xyz);
	r1.y = -r1.y + 1;
	r2.y = pow(r1.y, SoftPt_Rate.z);
	r1.y = max(0.001, r2.y);
	r2.yzw = r1.yyy * r3.xyz;
	r1.y = r3.w * CubeParam.y + CubeParam.x;
	r2.yzw = r1.yyy * r2.yzw;
	r3.xyz = r0.xyz * r2.yzw;
	r1.y = dot(lightpos.xyz, i.texcoord3.xyz);
	r1.y = -r1.y + r2.x;
	r2.x = r2.x;
	r1.y = r1.y * 0.5 + 1;
	r4.xyz = r0.xyz * ambient_rate.xyz;
	r4.xyz = r1.yyy * r4.xyz;
	r5.xyz = r3.xyz * CubeParam.zzz + r4.xyz;
	r3.xyz = r3.xyz * CubeParam.zzz;
	r3.xyz = r4.xyz * -r3.xyz + r5.xyz;
	r1.y = (specularParam.x >= 0) ? -r1.w : -r1.z;
	r1.w = (-specularParam.x >= 0) ? r1.w : r1.z;
	r1.y = r1.w + r1.y;
	r3.w = max(r1.y, 0);
	r0.xyz = r0.xyz + r3.www;
	r0.w = r0.w * prefogcolor_enhance.w;
	o.w = r0.w;
	r0.w = pow(r1.x, specularParam.z);
	r1.y = (-r2.x >= 0) ? 0 : 1;
	r1.w = r2.x * r1.y;
	r1.x = (-r1.x >= 0) ? 0 : r1.y;
	r0.w = r0.w * r1.x;
	r1.xyw = r1.www * light_Color.xyz;
	r1.xyw = r0.www * r1.xyw;
	r0.w = 1 / i.texcoord7.w;
	r4.xy = r0.ww * i.texcoord7.xy;
	r4.xy = r4.xy * float2(0.5, -0.5) + 0.5;
	r4.xy = r4.xy + g_TargetUvParam.xy;
	r4 = tex2D(Shadow_Tex_sampler, r4);
	r0.w = r4.z + g_ShadowUse.x;
	r1.xyw = r0.www * r1.xyw;
	r0.w = abs(specularParam.x);
	r1.xyw = r0.www * r1.xyw;
	r0.xyz = r1.xyw * r0.xyz + r3.xyz;
	r0.w = -r1.z + -CubeParam.z;
	r0.xyz = r2.yzw * r0.www + r0.xyz;
	r1.xyz = fog.xyz;
	r0.xyz = r0.xyz * prefogcolor_enhance.xyz + -r1.xyz;
	o.xyz = i.texcoord1.www * r0.xyz + fog.xyz;

	return o;
}
