sampler g_AlbedoSampler : register(s0);
float4 g_CameraParam : register(c193);
sampler g_NormalSampler : register(s1);
sampler g_SignSampler : register(s7);
sampler g_SpecMaskSampler : register(s2);
sampler g_Z_ShadowSampler : register(s5);
float4 g_finalColor_enhance : register(c188);
float4 g_lightCol : register(c186);
float4 g_lightHosei : register(c174);
float4 g_lightHosei2 : register(c175);
float4 g_lightPos : register(c185);
sampler g_specPow : register(s4);
float4 g_spot_angle : register(c191);
float4 g_spot_param : register(c192);
float4 prefogcolor_enhance : register(c187);

struct PS_IN
{
	float2 texcoord : TEXCOORD;
	float3 texcoord1 : TEXCOORD1;
};

float4 main(PS_IN i) : COLOR
{
	float4 o;

	float4 r0;
	float4 r1;
	float4 r2;
	float4 r3;
	float4 r4;
	float4 r5;
	float4 r6;
	r0.xy = float2(0.00048828125, 0.00069444446) + i.texcoord.xy;
	r1 = tex2D(g_SignSampler, r0);
	r1.xyz = r1.xyz + 0.5;
	r2.xyz = frac(r1.xyz);
	r1.xyz = r1.xyz + -r2.xyz;
	r0.z = r1.y * 2 + r1.x;
	r0.z = r1.z * 4 + r0.z;
	r1 = r0.z + float4(-2, -3, -4, -1);
	r2 = r1.w;
	clip(r2);
	r3 = tex2D(g_Z_ShadowSampler, r0);
	r0.z = r3.x * g_CameraParam.y + g_CameraParam.x;
	r2.yzw = i.texcoord1.xyz * -r0.zzz + g_lightPos.xyz;
	r3.xyw = r0.zzz * i.texcoord1.xyz;
	r0.z = dot(r2.yzw, r2.yzw);
	r0.z = 1 / sqrt(r0.z);
	r2.yzw = r0.zzz * r2.yzw;
	r0.z = 1 / r0.z;
	r0.w = dot(r2.yzw, g_spot_angle.xyz);
	r4 = tex2D(g_NormalSampler, r0);
	r2.yzw = r4.xyz * 2 + -1;
	r1.w = dot(g_spot_angle.xyz, r2.yzw);
	r4.x = (-r1.w >= 0) ? 0 : 1;
	r4.y = r0.w * r4.x + -g_spot_param.x;
	r0.w = r0.w * r4.x;
	r5.x = max(r4.y, 0);
	r4.x = frac(-r5.x);
	r4.x = r4.x + r5.x;
	r1.w = r1.w * r4.x;
	r1.w = r1.w * 0.5;
	r0.w = r0.w * 0.5 + r1.w;
	r5.y = 1;
	r1.w = r5.y + -g_spot_param.x;
	r1.w = 1 / r1.w;
	r1.w = r1.w * r4.y;
	r4.x = 1 / g_spot_param.y;
	r1.w = r1.w * r4.x;
	r0.w = r0.w * r1.w;
	r1.w = 1 / g_spot_param.z;
	r0.z = r0.z * r1.w;
	r0.z = -r0.z + 1;
	r1.w = 1 / g_spot_param.w;
	r0.z = r0.z * r1.w;
	r1.w = r0.z * r0.w;
	r0.z = r0.w * r0.z + -0.25;
	r0.w = (-r1.w >= 0) ? 0 : 1;
	r4.x = (r1.w >= 0) ? -0 : -1;
	r0.w = r0.w + r4.x;
	r4.x = dot(-r3.xyw, -r3.xyw);
	r4.x = 1 / sqrt(r4.x);
	r3.xyw = -r3.xyw * r4.xxx + g_spot_angle.xyz;
	r4.xyz = normalize(r3.xyw);
	r2.y = dot(r4.xyz, r2.yzw);
	r0.w = r0.w * r2.y;
	r2.y = max(r0.w, 0);
	r5 = tex2D(g_SpecMaskSampler, r0);
	r6 = tex2D(g_AlbedoSampler, r0);
	r0.x = r2.y + -r5.w;
	r0.y = -r5.w + 1;
	r0.y = 1 / r0.y;
	r0.x = r0.y * r0.x;
	r0.w = r4.w + -0.495;
	r2.y = (-r0.w >= 0) ? 0 : 1;
	r0.w = (r0.w >= 0) ? -0 : -1;
	r0.w = r0.w + r2.y;
	r2.y = max(r0.w, 0);
	r0.w = r2.y * -0.5 + r4.w;
	r0.y = r0.w + r0.w;
	r4 = tex2D(g_specPow, r0);
	r0.x = lerp(g_lightHosei.y, g_lightHosei.x, r2.x);
	r1.xyz = r1.xyz;
	r0.x = (-r1.x >= 0) ? r0.x : g_lightHosei.z;
	r0.x = (-r1.y >= 0) ? r0.x : g_lightHosei.w;
	r0.x = (-r1.z >= 0) ? r0.x : g_lightHosei2.x;
	r0.xyw = r0.xxx * g_lightCol.xyz;
	r1.xyz = r4.xyz * r0.xyw;
	r0.xyw = r0.xyw * r6.xyz;
	r0.z = r0.z + r6.w;
	r0.xyw = r1.www * r0.xyw;
	r0.xyw = r3.zzz * r0.xyw;
	r0.xyw = r0.zzz * r0.xyw;
	r1.xyz = r5.zzz * r1.xyz;
	r1.xyz = r3.zzz * r1.xyz;
	r1.xyz = r0.zzz * r1.xyz;
	r1.xyz = r2.yyy * r1.xyz;
	r0.xyz = r0.xyw * r2.yyy + r1.xyz;
	r0.xyz = r0.xyz * prefogcolor_enhance.xyz;
	o.xyz = r0.xyz * g_finalColor_enhance.xyz;
	o.w = 1;

	return o;
}
