float4 g_All_Offset : register(c49);
sampler g_Color_1_sampler : register(s0);
samplerCUBE g_CubeSampler : register(s3);
sampler g_MaskSampler : register(s5);
sampler g_Normalmap_sampler : register(s4);
sampler g_OcclusionSampler : register(s2);
sampler g_SpePowSampler : register(s8);
float4 g_ambientRate : register(c191);
float4 g_cubeParam : register(c42);
float4 g_cubeParam2 : register(c43);
float4 g_eyeLightDir : register(c187);
float4 g_eyeLightDir2 : register(c188);
float3 g_lightDir : register(c46);
float4 g_normalmapRate : register(c44);
float4 g_otherParam : register(c45);
float4 g_specParam : register(c41);

struct PS_IN
{
	float4 texcoord : TEXCOORD;
	float4 texcoord2 : TEXCOORD2;
	float3 texcoord3 : TEXCOORD3;
	float3 texcoord4 : TEXCOORD4;
	float3 texcoord5 : TEXCOORD5;
	float3 texcoord6 : TEXCOORD6;
	float4 texcoord8 : TEXCOORD8;
};

struct PS_OUT
{
	float4 color1 : COLOR1;
	float4 color : COLOR;
	float4 color2 : COLOR2;
	float4 color3 : COLOR3;
};

PS_OUT main(PS_IN i)
{
	PS_OUT o;

	float4 r0;
	float4 r1;
	float4 r2;
	float4 r3;
	float4 r4;
	float4 r5;
	float4 r6;
	float3 r7;
	r0.xy = g_All_Offset.xy + i.texcoord.xy;
	r0 = tex2D(g_Color_1_sampler, r0);
	r1.x = 0.5;
	r1 = g_otherParam.y * -r1.x + r0.w;
	clip(r1);
	r1.x = 1 + -i.texcoord2.w;
	r1.x = -r1.x + 1;
	r2 = tex2D(g_Normalmap_sampler, i.texcoord8.zwzw);
	r1.y = r2.x * 2 + -1;
	r2.yz = r2.yz * -2 + float2(-2, 1);
	r2.x = r1.x * r1.y;
	r1.xyz = r2.xyz * g_normalmapRate.xxx;
	r2.xyz = normalize(i.texcoord2.xyz);
	r3.xyz = normalize(i.texcoord3.xyz);
	r4.xyz = r2.zxy * r3.yzx;
	r4.xyz = r2.yzx * r3.zxy + -r4.xyz;
	r4.xyz = r1.yyy * r4.xyz;
	r2.xyz = r1.xxx * r2.xyz + r4.xyz;
	r2.xyz = r1.zzz * r3.xyz + r2.xyz;
	r1.w = dot(r2.xyz, r2.xyz);
	r1.w = 1 / sqrt(r1.w);
	r2.xyz = r2.xyz * r1.www + -r3.xyz;
	r2.xyz = g_normalmapRate.xxx * r2.xyz + r3.xyz;
	r1.w = dot(g_lightDir.xyz, r3.xyz);
	o.color1.xyz = r2.xyz * 0.5 + 0.5;
	r3.yzw = g_specParam.yzw;
	o.color1.w = r3.y + g_otherParam.x;
	r2.w = dot(g_lightDir.xyz, r2.xyz);
	r1.w = -r1.w + r2.w;
	r4 = float4(2, -1, 1, -0);
	r1.w = r1.w * g_normalmapRate.x + r4.z;
	r5.xyz = normalize(-g_eyeLightDir.xyz);
	r2.w = dot(r5.xyz, r2.xyz);
	r3.x = -r2.w + 1;
	r2.w = r3.x * -g_specParam.z + r2.w;
	r5.x = r2.w + -g_specParam.z;
	r5.yw = g_specParam.yy;
	r6 = tex2D(g_SpePowSampler, r5);
	r2.w = abs(g_specParam.x);
	r6.xyz = r2.www * r6.xyz;
	r7.xyz = normalize(-g_eyeLightDir2.xyz);
	r2.x = dot(r7.xyz, r2.xyz);
	r5.z = r2.x + -g_specParam.z;
	r5 = tex2D(g_SpePowSampler, r5.zwzw);
	r2.xyz = r2.www * r5.xyz;
	r2.xyz = r2.xyz * g_eyeLightDir2.www;
	r2.xyz = r6.xyz * g_eyeLightDir.www + r2.xyz;
	r5 = i.texcoord;
	r2.w = r4.y + g_normalmapRate.w;
	r3.xy = lerp(r5.zw, r5.xy, r2.ww);
	r5 = tex2D(g_OcclusionSampler, r3);
	r5.xyz = r5.xyz + -1;
	r2.w = g_normalmapRate.w;
	r5.xyz = r2.www * r5.xyz + 1;
	r2.w = r3.w + -1;
	r3.x = g_specParam.w;
	r6 = tex2D(g_MaskSampler, i.texcoord);
	r7.xyz = lerp(r6.xyz, r0.www, r3.xxx);
	r3.xyw = lerp(r5.zzz, r7.xyz, r2.www);
	r2.xyz = r2.xyz * r3.xyw;
	r3.xyw = r0.xyz * g_ambientRate.xyz;
	r3.xyw = r5.xxx * r3.xyw;
	r2.xyz = r3.xyw * r1.www + r2.xyz;
	r6.xyz = i.texcoord4.xyz;
	r3.xyw = r6.zxy * i.texcoord5.yzx;
	r3.xyw = r6.yzx * i.texcoord5.zxy + -r3.xyw;
	r3.xyw = r1.yyy * r3.xyw;
	r1.xyw = r1.xxx * i.texcoord4.xyz + r3.xyw;
	r1.xyz = r1.zzz * i.texcoord5.xyz + r1.xyw;
	r1.w = dot(i.texcoord6.xyz, r1.xyz);
	r1.w = r1.w + r1.w;
	r1.xyz = r1.xyz * -r1.www + i.texcoord6.xyz;
	r1.w = -r1.z;
	r1 = tex2D(g_CubeSampler, r1.xyww);
	r2.w = (-g_cubeParam.w >= 0) ? -r4.w : -r4.y;
	r3.x = (g_cubeParam.w >= 0) ? r4.w : r4.y;
	r2.w = r2.w + r3.x;
	r3.xy = -r4.xz + g_cubeParam.ww;
	r4.x = lerp(r6.w, r0.w, r3.y);
	r3.x = r3.x;
	r0.w = r4.z + -g_cubeParam.w;
	r0.w = r4.x * r2.w + r0.w;
	r2.w = lerp(r5.y, r0.w, r3.x);
	o.color.w = r5.x;
	r1.xyz = r1.xyz * r2.www;
	r1.xyz = r1.xyz * g_cubeParam.yyy;
	r3.xyw = r1.www * r1.xyz;
	r3.xyw = r3.xyw * g_cubeParam2.yyy;
	r1.xyz = r1.xyz * g_cubeParam2.xxx + r3.xyw;
	r3.xyw = r0.xyz + g_cubeParam2.zzz;
	o.color.xyz = r0.xyz;
	o.color2.xyz = r1.xyz * r3.xyw + r2.xyz;
	o.color2.w = 0;
	o.color3 = r3.z * float4(0, 0, 0, 1) + float4(1, 1, 0, 0);

	return o;
}
