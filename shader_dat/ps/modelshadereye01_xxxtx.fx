sampler Color_1_sampler : register(s0);
float4 CubeParam : register(c42);
sampler Spec_Pow_sampler : register(s4);
float4 ambient_rate : register(c40);
float4 ambient_rate_rate : register(c71);
samplerCUBE cubemap_sampler : register(s2);
float4 eyeLightDir : register(c44);
float3 fog : register(c67);
float4 g_All_Offset : register(c76);
float4 light_Color : register(c61);
float4 lightpos : register(c62);
sampler normalmap_sampler : register(s3);
float4 prefogcolor_enhance : register(c77);
float4 specularParam : register(c41);
float4 tile : register(c45);
sampler tripleMask_sampler : register(s1);
float4x4 viewInverseMatrix : register(c12);

struct PS_IN
{
	float2 texcoord : TEXCOORD;
	float4 texcoord1 : TEXCOORD1;
	float4 texcoord2 : TEXCOORD2;
	float3 texcoord3 : TEXCOORD3;
	float3 texcoord4 : TEXCOORD4;
};

float4 main(PS_IN i) : COLOR
{
	float4 o;

	float4 r0;
	float4 r1;
	float4 r2;
	float4 r3;
	float4 r4;
	float3 r5;
	float3 r6;
	r0.xyz = i.texcoord3.xyz;
	r1.xyz = r0.yzx * i.texcoord2.zxy;
	r0.xyz = i.texcoord2.yzx * r0.zxy + -r1.xyz;
	r1.xy = tile.xy;
	r1.xy = i.texcoord.xy * r1.xy + g_All_Offset.xy;
	r1 = tex2D(normalmap_sampler, r1);
	r1.xyz = r1.xyz + -0.5;
	r0.xyz = r0.xyz * -r1.yyy;
	r0.w = r1.x * i.texcoord2.w;
	r0.xyz = r0.www * i.texcoord2.xyz + r0.xyz;
	r0.xyz = r1.zzz * i.texcoord3.xyz + r0.xyz;
	r1.xyz = normalize(r0.xyz);
	r0.x = dot(r1.xyz, transpose(viewInverseMatrix)[0].xyz);
	r0.y = dot(r1.xyz, transpose(viewInverseMatrix)[1].xyz);
	r0.z = dot(r1.xyz, transpose(viewInverseMatrix)[2].xyz);
	r0.w = dot(i.texcoord4.xyz, r0.xyz);
	r0.w = r0.w + r0.w;
	r0.xyz = r0.xyz * -r0.www + i.texcoord4.xyz;
	r0.w = -r0.z;
	r0 = tex2D(cubemap_sampler, r0.xyww);
	r0 = r0 * ambient_rate_rate.w;
	r1.w = r0.w * CubeParam.y + CubeParam.x;
	r2.xy = tile.xy * i.texcoord.xy;
	r2 = tex2D(tripleMask_sampler, r2);
	r0.xyz = r0.xyz * r2.yyy;
	r0.xyz = r1.www * r0.xyz;
	r2.yw = g_All_Offset.xy + i.texcoord.xy;
	r3 = tex2D(Color_1_sampler, r2.ywzw);
	r2.yw = -r3.yy + r3.xz;
	r1.w = max(abs(r2.y), abs(r2.w));
	r1.w = r1.w + -0.015625;
	r2.y = (-r1.w >= 0) ? 0 : 1;
	r1.w = (r1.w >= 0) ? -0 : -1;
	r1.w = r1.w + r2.y;
	r1.w = (r1.w >= 0) ? -r1.w : -0;
	r3.xz = (r1.ww >= 0) ? r3.yy : r3.xz;
	r1.w = r3.w * ambient_rate.w;
	r4.xyz = r0.xyz * r3.xyz;
	r2.xyw = r2.xxx * r3.xyz;
	r3.xyz = r3.xyz + specularParam.www;
	r5.xyz = r2.zzz * light_Color.xyz;
	r2.xyz = r2.xyw * ambient_rate.xyz;
	r2.xyz = r2.xyz * ambient_rate_rate.xyz;
	r2.w = dot(lightpos.xyz, r1.xyz);
	r3.w = dot(lightpos.xyz, i.texcoord3.xyz);
	r2.w = r2.w + -r3.w;
	r2.w = r2.w + 1;
	r2.xyz = r2.www * r2.xyz;
	r6.xyz = r4.xyz * CubeParam.zzz + r2.xyz;
	r4.xyz = r4.xyz * CubeParam.zzz;
	r2.xyz = r2.xyz * -r4.xyz + r6.xyz;
	r4.xyz = normalize(eyeLightDir.xyz);
	r1.x = dot(r4.xyz, r1.xyz);
	r1.y = -r1.x + 1;
	r1.x = r1.y * -specularParam.z + r1.x;
	r1.y = specularParam.y;
	r4 = tex2D(Spec_Pow_sampler, r1);
	r1.xyz = r4.xyz * r5.xyz;
	r2.w = abs(specularParam.x);
	r1.xyz = r1.xyz * r2.www;
	r2.xyz = r1.xyz * r3.xyz + r2.xyz;
	r1.xyz = r3.xyz * r1.xyz;
	r2.w = 1;
	r2.w = r2.w + -CubeParam.z;
	r0.xyz = r0.xyz * r2.www + r2.xyz;
	r2.xyz = fog.xyz;
	r0.xyz = r0.xyz * prefogcolor_enhance.xyz + -r2.xyz;
	o.xyz = i.texcoord1.www * r0.xyz + fog.xyz;
	r0.x = max(r1.x, r1.y);
	r2.x = max(r0.x, r1.z);
	r0.x = r2.x * specularParam.x;
	r0.y = max(CubeParam.x, CubeParam.y);
	r0.x = r0.w * r0.y + r0.x;
	r2.x = max(r0.x, r1.w);
	r0.x = dot(i.texcoord1.xyz, i.texcoord1.xyz);
	r0.x = 1 / sqrt(r0.x);
	r0.x = 1 / r0.x;
	r0.x = r0.x * 0.44444445;
	r0.x = -r0.x + 1;
	r0.x = r0.x * 5;
	r0.x = r0.x * r2.x;
	r0.x = r0.x * prefogcolor_enhance.w;
	o.w = r0.x;

	return o;
}
