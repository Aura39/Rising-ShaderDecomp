sampler Color_2_sampler : register(s1);
float4 CubeParam : register(c42);
float4 SoftPt_Rate : register(c44);
float4 ambient_rate : register(c40);
float4 blendTile : register(c49);
samplerCUBE cubemap_sampler : register(s2);
float4 finalcolor_enhance : register(c78);
float3 fog : register(c67);
float4 g_CameraParam : register(c193);
float4 g_TargetUvParam : register(c194);
float4 g_WtrFogColor : register(c46);
float4 g_WtrFogParam : register(c45);
sampler g_Z_sampler : register(s13);
float4 lightpos : register(c62);
sampler normalmap_sampler : register(s3);
float4 prefogcolor_enhance : register(c77);
float4 tile : register(c48);
float4x4 viewInverseMatrix : register(c12);

struct PS_IN
{
	float4 color : COLOR;
	float4 texcoord : TEXCOORD;
	float4 texcoord1 : TEXCOORD1;
	float4 texcoord2 : TEXCOORD2;
	float3 texcoord3 : TEXCOORD3;
	float3 texcoord4 : TEXCOORD4;
	float4 texcoord8 : TEXCOORD8;
};

float4 main(PS_IN i) : COLOR
{
	float4 o;

	float4 r0;
	float4 r1;
	float4 r2;
	float4 r3;
	r0.zw = float2(0.5, -0.5);
	r0.x = (SoftPt_Rate.x >= 0) ? r0.w : r0.z;
	r0.y = (-SoftPt_Rate.x >= 0) ? -r0.w : -r0.z;
	r0.x = r0.y + r0.x;
	r0.x = (r0.x >= 0) ? -r0.x : -0;
	r0.y = 1 / i.texcoord8.w;
	r1.xy = r0.yy * i.texcoord8.xy;
	r1.xy = r1.xy * float2(0.5, -0.5) + 0.5;
	r1.xy = r1.xy + g_TargetUvParam.xy;
	r1 = tex2D(g_Z_sampler, r1);
	r0.y = r1.x * g_CameraParam.y + g_CameraParam.x;
	r0.y = r0.y + -i.texcoord8.w;
	r1.x = abs(SoftPt_Rate.x);
	r1.x = 1 / r1.x;
	r1.x = r0.y * r1.x;
	r0.y = -r0.y + g_WtrFogParam.w;
	r1.y = -r1.x + 1;
	r0.x = (r0.x >= 0) ? r1.x : r1.y;
	r1.xy = -g_WtrFogParam.zx + g_WtrFogParam.wy;
	r1.x = 1 / r1.x;
	r1.y = 1 / r1.y;
	r0.y = r0.y * r1.x;
	r2.xyz = finalcolor_enhance.xyz;
	r2.w = -1 + i.color.w;
	r2 = SoftPt_Rate.y * r2 + r0.wwwz;
	r2.w = r2.w * ambient_rate.w;
	r2 = r2 + -g_WtrFogColor;
	r2 = r0.y * r2;
	r0.y = g_WtrFogParam.y + i.texcoord1.z;
	r0.y = r1.y * r0.y;
	r1 = r0.y * r2 + g_WtrFogColor;
	r2 = r1.w * r0.x + -0.01;
	r0.x = r0.x * r1.w;
	r0.x = r0.x * prefogcolor_enhance.w;
	o.w = r0.x;
	clip(r2);
	r2.xyz = i.texcoord3.xyz;
	r0.xyw = r2.yzx * i.texcoord2.zxy;
	r0.xyw = i.texcoord2.yzx * r2.zxy + -r0.xyw;
	r2.xy = i.texcoord.zw * blendTile.xy + blendTile.zw;
	r2 = tex2D(Color_2_sampler, r2);
	r2.zw = i.texcoord.zw * tile.xy + tile.zw;
	r3 = tex2D(normalmap_sampler, r2.zwzw);
	r3.xyz = r3.xyz + -0.5;
	r2.xy = r2.xy + r3.xy;
	r2.xy = r2.xy + -0.5;
	r0.xyw = r0.xyw * -r2.yyy;
	r1.w = r2.x * i.texcoord2.w;
	r0.xyw = r1.www * i.texcoord2.xyz + r0.xyw;
	r0.xyw = r3.zzz * i.texcoord3.xyz + r0.xyw;
	r1.w = dot(r0.xyw, r0.xyw);
	r1.w = 1 / sqrt(r1.w);
	r0.xyw = r0.xyw * r1.www + -i.texcoord3.xyz;
	r0.xyw = CubeParam.www * r0.xyw + i.texcoord3.xyz;
	r2.x = dot(r0.xyw, transpose(viewInverseMatrix)[0].xyz);
	r2.y = dot(r0.xyw, transpose(viewInverseMatrix)[1].xyz);
	r2.z = dot(r0.xyw, transpose(viewInverseMatrix)[2].xyz);
	r1.w = dot(i.texcoord4.xyz, r2.xyz);
	r1.w = r1.w + r1.w;
	r2.xyz = r2.xyz * -r1.www + i.texcoord4.xyz;
	r2.w = -r2.z;
	r2 = tex2D(cubemap_sampler, r2.xyww);
	r3.xyz = normalize(-i.texcoord1.xyz);
	r1.w = dot(r3.xyz, r0.xyw);
	r0.x = dot(lightpos.xyz, r0.xyw);
	r0.y = -r1.w + 1;
	r1.w = pow(r0.y, SoftPt_Rate.z);
	r0.y = max(0.001, r1.w);
	r2.xyz = r0.yyy * r2.xyz;
	r0.y = r2.w * CubeParam.y + CubeParam.x;
	r2.xyz = r0.yyy * r2.xyz;
	r3.xyz = r1.xyz * r2.xyz;
	r1.xyz = r1.xyz * ambient_rate.xyz;
	r0.y = dot(lightpos.xyz, i.texcoord3.xyz);
	r0.x = -r0.y + r0.x;
	r0.x = r0.x * 0.5 + 1;
	r0.xyw = r0.xxx * r1.xyz;
	r1.xyz = r3.xyz * CubeParam.zzz + r0.xyw;
	r3.xyz = r3.xyz * CubeParam.zzz;
	r0.xyw = r0.xyw * -r3.xyz + r1.xyz;
	r0.z = r0.z + -CubeParam.z;
	r0.xyz = r2.xyz * r0.zzz + r0.xyw;
	r1.xyz = fog.xyz;
	r0.xyz = r0.xyz * prefogcolor_enhance.xyz + -r1.xyz;
	o.xyz = i.texcoord1.www * r0.xyz + fog.xyz;

	return o;
}
